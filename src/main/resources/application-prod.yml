server:
  port: 8080

spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${DB_URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${RDS_USER}
    password: ${RDS_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true

  rabbitmq:
    host: ${PROD_RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

  mail:
    host: smtp.gmail.com
    port: ${PROD_SMTP_PORT}
    username: ${PROD_GOOGLE_EMAIL}
    password: ${PROD_GOOGLE_EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  data:
    redis:
      host: ${PROD_REDIS_HOST}
      port: ${PROD_REDIS_PORT}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_OAUTH2_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH2_CLIENT_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT_URI}
            scope:
              - profile
              - email

jwt:
  secretKey: ${PROD_JWT_SECRET_KEY}
  accessTokenExpire: 1800000  # 30분
  refreshTokenExpire: 2592000000  # 30일

elasticsearch:
  hostAndPort: ${PROD_ES_HOST_PORT}
  username: ${PROD_ES_USERNAME}
  password: ${PROD_ES_PASSWORD}
  fingerprint: ${PROD_ES_FINGERPRINT}

cloud:
  aws:
    s3:
      bucket: ${PROD_IMAGE_BUCKET_NAME}
    credentials:
      access-key: ${PROD_AWS_IMAGE_ACCESS_KEY}
      secret-key: ${PROD_AWS_IMAGE_SECRET_KEY}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false

logging:
  level:
    org.springframework.data.elasticsearch.client:
      WIRE: TRACE